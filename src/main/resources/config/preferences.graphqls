scalar Date

type Query {
	getBranchList: [CmsBranchVo]
	getStateList: [State]
	getCityList: [City]
	getAuthorizedSignatoryList: [CmsAuthorizedSignatoryVo]
	getBankAccountsList: [CmsBankAccountsVo]
	getLegalEntityList: [CmsLegalEntityVo]
}

type Mutation {
	addCollege(input: CollegeInput): CollegePayload
	saveBranch(input: BranchInput): BranchPayload
	saveAuthorizedSignatory(input: AuthorizedSignatoryInput): AuthorizedSignatoryPayload
	saveBankAccounts(input: BankAccountsInput): BankAccountsPayload
	saveLegalEntity(input: LegalEntityInput): LegalEntityPayload
}

input LegalEntityInput {
	id: Long 		
	logoFile: String 		
	logoFilePath: String 		
	logoFileName: String 		
	logoFileExtension: String 		
	legalNameOfCollege: String 		
	typeOfCollege: String 		
	dateOfIncorporation: Date 		
	registeredOfficeAddress: String 		
	collegeIdentificationNumber: String 		
	pan: String 		
	tan: String 		
	tanCircleNumber: String 		
	citTdsLocation: String 		
	formSignatory: Long 		
	pfNumber: String 		
	pfRegistrationDate: Date 		
	pfSignatory: Long 		
	esiNumber: String 		
	esiRegistrationDate: Date 		
	esiSignatory: Long 		
	ptNumber: String 		
	ptRegistrationDate: Date 		
	ptSignatory: Long 		
	strDateOfIncorporation: String 		
	strPfRegistrationDate: String 		
	strEsiRegistrationDate: String 		
	strPtRegistrationDate: String 		
    branchId: Long
    status: String
}

type LegalEntityPayload {
	cmsLegalEntityVo: CmsLegalEntityVo
}

type CmsLegalEntityVo {
	id: Long 		
	logoFile: String 		
	logoFilePath: String 		
	logoFileName: String 		
	logoFileExtension: String 		
	legalNameOfCollege: String 		
	typeOfCollege: String 		
	dateOfIncorporation: Date 		
	registeredOfficeAddress: String 		
	collegeIdentificationNumber: String 		
	pan: String 		
	tan: String 		
	tanCircleNumber: String 		
	citTdsLocation: String 		
	formSignatory: Long 		
	pfNumber: String 		
	pfRegistrationDate: Date 		
	pfSignatory: Long 		
	esiNumber: String 		
	esiRegistrationDate: Date 		
	esiSignatory: Long 		
	ptNumber: String 		
	ptRegistrationDate: Date 		
	ptSignatory: Long 		
	strDateOfIncorporation: String 		
	strPfRegistrationDate: String 		
	strEsiRegistrationDate: String 		
	strPtRegistrationDate: String 		
    branchId: Long
    cmsBranchVo: CmsBranchVo 
    createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    status: String 
    strCreatedOn: String 
    strUpdatedOn: String 
    exitCode: Long 
    exitDescription: String 
    dataList: [CmsLegalEntityVo]
}



input BankAccountsInput {
	id: Long
    bankName: String 
    accountNumber: String 
    typeOfAccount: String 
    ifscCode: String 
    address: String 
    corporateId: String 
    branchId: Long
    status: String
}

type BankAccountsPayload {
	cmsBankAccountsVo: CmsBankAccountsVo
}

type CmsBankAccountsVo {
	id: Long
    bankName: String 
    accountNumber: String 
    typeOfAccount: String 
    ifscCode: String 
    address: String 
    corporateId: String 
    branchId: Long
    cmsBranchVo: CmsBranchVo 
    createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    status: String 
    strCreatedOn: String 
    strUpdatedOn: String 
    exitCode: Long 
    exitDescription: String 
    dataList: [CmsBankAccountsVo]
}


input AuthorizedSignatoryInput {
	id: Long
    name: String 
    fatherName: String 
    designation: String 
    address: String 
    emailId: String 
    cellPhoneNumber: String 
    panNo: String 
    branchId: Long
    status: String
}

type AuthorizedSignatoryPayload {
	cmsAuthorizedSignatoryVo: CmsAuthorizedSignatoryVo
}

type CmsAuthorizedSignatoryVo {
	id: Long
    name: String 
    fatherName: String 
    designation: String 
    address: String 
    emailId: String 
    cellPhoneNumber: String 
    panNo: String 
    branchId: Long
    cmsBranchVo: CmsBranchVo 
    createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    status: String 
    strCreatedOn: String 
    strUpdatedOn: String 
    exitCode: Long 
    exitDescription: String 
    dataList: [CmsAuthorizedSignatoryVo]
}

input BranchInput{
	id: Long
	branchName: String 
	address: String 
	pinCode: String 
	branchHead: String 
	cityId: Long 
	stateId: Long 
	status: String
}

type BranchPayload {
	cmsBranchVo: CmsBranchVo
}

type CollegePayload {
	cmsCollegeVo: CmsCollegeVo
}

input CollegeInput {
	collegeName: String 
    logoFilePath: String 
    logoFileName: String 
    logoFileExtension: String 
    logoFile: String
    status: String   
}

type College {
	id: Long 
    collegeName: String 
    logoFilePath: String 
    logoFileName: String 
    logoFileExtension: String 
    createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    status: String 
    country: Country
}

type CmsCollegeVo {
	id: Long 
    collegeName: String 
    logoFilePath: String 
    logoFileName: String 
    logoFileExtension: String 
    logoFile: String
    createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    status: String 
    strCreatedOn: String 
    strUpdatedOn: String 
    exitCode: Long 
    exitDescription: String 
}

type CmsBranchVo {
	id: Long
	branchName: String 
	address: String 
	pinCode: String 
	branchHead: String 
	cellPhoneNo: String 
	landLinePhoneNo: String 
	emailId: String 
	faxNo: String 
	isMainBranch: String 
	startDate: Date 
	college: College 
	city: City 
	state: State 
	strStartDate: String 
	collegeId: Long 
	cityId: Long 
	stateId: Long 
	createdBy: String 
    createdOn: Date 
    updatedBy: String 
    updatedOn: Date 
    strCreatedOn: String 
    strUpdatedOn: String
    exitCode: Long
    exitDescription: String
    status: String
    dataList: [CmsBranchVo]
}

type Country{
	id: Long
    countryName: String 
    countryCode: String 
    isdCode: String 
}

type State{
	id: Long
    stateName: String 
    divisionType: String 
	stateCode: String 
    country: Country 
}

type City{
	id: Long 
    cityName: String 
    cityCode: String 
    stdCode: String 
    state: State 
}